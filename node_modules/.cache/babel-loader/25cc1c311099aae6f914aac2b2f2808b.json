{"ast":null,"code":"import _slicedToArray from\"E:\\\\react_projects\\\\it-kamasutra\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import classes from\"./Users.module.css\";var Paginator=function Paginator(props){var pagesCount=Math.ceil(props.totalUsersCount/props.pageSize);var pages=[];for(var i=1;i<=pagesCount;i++){pages.push(i);}var portionCount=Math.ceil(pagesCount/props.pagePortionSize);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),portionNumber=_useState2[0],setPortionNumber=_useState2[1];var leftPortionPageNumber=(portionNumber-1)*props.pagePortionSize+1;var rightPortionPageNumber=portionNumber*props.pagePortionSize;var onPageChanged=function onPageChanged(page){props.onPageChanged(page);};return/*#__PURE__*/React.createElement(\"div\",{className:classes.page},portionNumber>1?/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber-1);}},\"prev\"):null,pages.filter(function(p){return p>=leftPortionPageNumber&&p<=rightPortionPageNumber;}).map(function(page){console.log(page);return/*#__PURE__*/React.createElement(\"span\",{className:page===props.currentPage?classes.selectedPage:classes.page,key:page,onClick:function onClick(e){onPageChanged(page);}},page);}),portionCount>portionNumber?/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber+1);}},\"next\"):null);};export default Paginator;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Users/Paginator.js"],"names":["React","useState","classes","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","pagePortionSize","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onPageChanged","page","filter","p","map","console","log","currentPage","selectedPage","e"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CAIrB,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,CAAwBJ,KAAK,CAACK,QAAxC,CAAjB,CAEA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,UAArB,CAAiCM,CAAC,EAAlC,CAAqC,CACjCD,KAAK,CAACE,IAAN,CAAWD,CAAX,EACH,CAED,GAAIE,CAAAA,YAAY,CAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,CAACD,KAAK,CAACU,eAA3B,CAAnB,CAXqB,cAYmBb,QAAQ,CAAC,CAAD,CAZ3B,wCAYhBc,aAZgB,eAYDC,gBAZC,eAarB,GAAIC,CAAAA,qBAAqB,CAAG,CAACF,aAAa,CAAG,CAAjB,EAAsBX,KAAK,CAACU,eAA5B,CAA8C,CAA1E,CACA,GAAII,CAAAA,sBAAsB,CAAGH,aAAa,CAAGX,KAAK,CAACU,eAAnD,CAEA,GAAIK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAU,CAC1BhB,KAAK,CAACe,aAAN,CAAoBC,IAApB,EACH,CAFD,CAIA,mBACI,2BAAK,SAAS,CAAElB,OAAO,CAACkB,IAAxB,EACKL,aAAa,CAAG,CAAhB,cACD,8BAAQ,OAAO,CAAE,kBAAM,CAACC,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CAAoC,CAA5D,SADC,CAC6E,IAFlF,CAIKL,KAAK,CACDW,MADJ,CACW,SAAAC,CAAC,QAAIA,CAAAA,CAAC,EAAIL,qBAAL,EAA8BK,CAAC,EAAIJ,sBAAvC,EADZ,EAEIK,GAFJ,CAEQ,SAAAH,IAAI,CAAI,CACTI,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACA,mBAAO,4BACH,SAAS,CAAEA,IAAI,GAAKhB,KAAK,CAACsB,WAAf,CAA6BxB,OAAO,CAACyB,YAArC,CAAmDzB,OAAO,CAACkB,IADnE,CAEH,GAAG,CAAEA,IAFF,CAGH,OAAO,CAAE,iBAACQ,CAAD,CAAO,CACZT,aAAa,CAACC,IAAD,CAAb,CACH,CALE,EAKCA,IALD,CAAP,CAMH,CAVJ,CAJL,CAeKP,YAAY,CAAGE,aAAf,cACG,8BAAQ,OAAO,CAAE,kBAAM,CAACC,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CAAoC,CAA5D,SADH,CACiF,IAhBtF,CADJ,CAoBH,CAxCD,CA0CA,cAAeZ,CAAAA,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport classes from \"./Users.module.css\"\r\n\r\nlet Paginator = props => {\r\n\r\n\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/props.pagePortionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.pagePortionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.pagePortionSize;\r\n\r\n    let onPageChanged = (page) => {\r\n        props.onPageChanged(page)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            {portionNumber > 1 ?\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>prev</button> : null}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(page => {\r\n                    console.log(page)\r\n                    return <span\r\n                        className={page === props.currentPage ? classes.selectedPage: classes.page}\r\n                        key={page}\r\n                        onClick={(e) => {\r\n                            onPageChanged(page)\r\n                        }}>{page}</span>\r\n                })}\r\n            {portionCount > portionNumber ?\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1)}}>next</button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}