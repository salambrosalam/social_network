{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nexport const ADD_POST = \"ADD_POST\";\nexport const UPDATE_NEW_POST_TEXT = \"UPDATE_NEW_POST_TEXT\";\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\nexport const SET_STATUS = \"SET_STATUS\";\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hi,from Java man\",\n    likesCount: 25\n  }, {\n    id: 1,\n    message: \"Python the best_ ho-ho-ho\",\n    likesCount: 55\n  }],\n  profile: null,\n  newPostText: \"\",\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likesCount: 100\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: \"\"\n        };\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return {};\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport let addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport let updateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport let setUserProfileActionCreator = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile: profile\n  };\n};\nexport let getStatusActionCreator = userId => {\n  return {\n    type: SET_STATUS,\n    userId: userId\n  };\n};\nexport let getStatusThunkCreator = status => {\n  return dispatch => {\n    usersAPI.getStatus(userId).then(response => {\n      dispatch(setStatusActionCreator(response.data));\n    });\n  };\n};\nexport let updateStatusThunkCreator = status => {\n  return dispatch => {\n    usersAPI.updateStatus(status).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatusActionCreator(status));\n      }\n    });\n  };\n};\nexport const setUsersProfileThunkCreator = userId => {\n  return dispatch => {\n    usersAPI.getProfile(userId).then(response => {\n      dispatch(setUserProfileActionCreator(response.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/redux/profileReducer.js"],"names":["usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","UPDATE_STATUS","initialState","posts","id","message","likesCount","profile","newPostText","status","profileReducer","state","action","type","newPost","newText","addPostActionCreator","updateNewPostTextActionCreator","text","setUserProfileActionCreator","getStatusActionCreator","userId","getStatusThunkCreator","dispatch","getStatus","then","response","setStatusActionCreator","data","updateStatusThunkCreator","updateStatus","resultCode","setUsersProfileThunkCreator","getProfile"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const UPDATE_NEW_POST_TEXT = \"UPDATE_NEW_POST_TEXT\";\r\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nexport const SET_STATUS = \"SET_STATUS\";\r\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi,from Java man\", likesCount: 25},\r\n        {id: 1, message: \"Python the best_ ho-ho-ho\", likesCount: 55}\r\n    ],\r\n    profile: null,\r\n    newPostText: \"\",\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 100\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return{\r\n\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport let addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\n\r\nexport let updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n}\r\n\r\nexport let setUserProfileActionCreator = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile\r\n    }\r\n}\r\n\r\nexport let getStatusActionCreator = (userId) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport let getStatusThunkCreator = (status) => {\r\n    return (dispatch) => {\r\n        usersAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatusActionCreator(response.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport let updateStatusThunkCreator = (status) => {\r\n    return (dispatch) => {\r\n        usersAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0){\r\n                dispatch(setStatusActionCreator(status))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const setUsersProfileThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setUserProfileActionCreator(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}