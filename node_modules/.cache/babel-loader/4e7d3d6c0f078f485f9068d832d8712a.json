{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_projects\\\\it-kamasutra\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followActionCreator, setCurrentPageActionCreator, setIsFetchingActionCreator, setTotalUsersCountActionCreator, setUsersActionCreator, unfollowActionCreator } from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Loader from \"../Loader/Loader\";\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 42\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      currentPage: this.props.currentPage,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      setCurrentPage: this.props.setCurrentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow: followActionCreator,\n  unfollow: unfollowActionCreator,\n  setUsers: setUsersActionCreator,\n  setCurrentPage: setCurrentPageActionCreator,\n  setTotalUsersCount: setTotalUsersCountActionCreator,\n  setIsFetching: setIsFetchingActionCreator\n})(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["C:/react_projects/it-kamasutra/src/components/Users/UsersContainer.js"],"names":["React","connect","followActionCreator","setCurrentPageActionCreator","setIsFetchingActionCreator","setTotalUsersCountActionCreator","setUsersActionCreator","unfollowActionCreator","axios","Users","Loader","UsersAPIComponent","Component","onPageChanged","pageNumber","props","setCurrentPage","setIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","follow","unfollow","users","mapStateToProps","state","usersPage","UsersContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followActionCreator,\r\n    setCurrentPageActionCreator, setIsFetchingActionCreator, setTotalUsersCountActionCreator,\r\n    setUsersActionCreator,\r\n    unfollowActionCreator\r\n} from \"../../redux/usersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nclass UsersAPIComponent extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Loader/> : null}\r\n                <Users currentPage={this.props.currentPage}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       setCurrentPage={this.props.setCurrentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps,\r\n    {follow: followActionCreator,\r\n    unfollow: unfollowActionCreator,\r\n    setUsers: setUsersActionCreator,\r\n    setCurrentPage: setCurrentPageActionCreator,\r\n    setTotalUsersCount: setTotalUsersCountActionCreator,\r\n    setIsFetching: setIsFetchingActionCreator})(UsersAPIComponent);\r\n\r\nexport default UsersContainer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}