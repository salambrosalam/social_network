{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_projects\\\\it-kamasutra\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followActionCreator, getUsersThunkCreator, setCurrentPageActionCreator, setIsFetchingActionCreator, setTotalUsersCountActionCreator, setUsersActionCreator, toggleFollowingProgressActionCreator, unfollowActionCreator } from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Loader from \"../Loader/Loader\";\nimport { getUsers, usersAPI } from \"../../api/api\";\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setIsFetching(true);\n      usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        this.props.setIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 42\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      currentPage: this.props.currentPage,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      setCurrentPage: this.props.setCurrentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      followingProgress: this.props.followingProgress,\n      toggleProgress: this.props.toggleProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingProgress: state.usersPage.followingInProgress\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow: followActionCreator,\n  unfollow: unfollowActionCreator,\n  setUsers: setUsersActionCreator,\n  setCurrentPage: setCurrentPageActionCreator,\n  setTotalUsersCount: setTotalUsersCountActionCreator,\n  setIsFetching: setIsFetchingActionCreator,\n  toggleProgress: toggleFollowingProgressActionCreator,\n  getUsers: getUsersThunkCreator\n})(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["C:/react_projects/it-kamasutra/src/components/Users/UsersContainer.js"],"names":["React","connect","followActionCreator","getUsersThunkCreator","setCurrentPageActionCreator","setIsFetchingActionCreator","setTotalUsersCountActionCreator","setUsersActionCreator","toggleFollowingProgressActionCreator","unfollowActionCreator","axios","Users","Loader","getUsers","usersAPI","UsersAPIComponent","Component","onPageChanged","pageNumber","props","setCurrentPage","setIsFetching","currentPage","pageSize","then","data","setUsers","items","componentDidMount","render","isFetching","totalUsersCount","follow","unfollow","users","followingProgress","toggleProgress","mapStateToProps","state","usersPage","followingInProgress","UsersContainer","setTotalUsersCount"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followActionCreator, getUsersThunkCreator,\r\n    setCurrentPageActionCreator, setIsFetchingActionCreator, setTotalUsersCountActionCreator,\r\n    setUsersActionCreator, toggleFollowingProgressActionCreator,\r\n    unfollowActionCreator\r\n} from \"../../redux/usersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {getUsers, usersAPI} from \"../../api/api\";\r\n\r\nclass UsersAPIComponent extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Loader/> : null}\r\n                <Users currentPage={this.props.currentPage}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       setCurrentPage={this.props.setCurrentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       followingProgress={this.props.followingProgress}\r\n                       toggleProgress={this.props.toggleProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps,\r\n    {follow: followActionCreator,\r\n    unfollow: unfollowActionCreator,\r\n    setUsers: setUsersActionCreator,\r\n    setCurrentPage: setCurrentPageActionCreator,\r\n    setTotalUsersCount: setTotalUsersCountActionCreator,\r\n    setIsFetching: setIsFetchingActionCreator,\r\n    toggleProgress: toggleFollowingProgressActionCreator,\r\n        getUsers: getUsersThunkCreator})(UsersAPIComponent);\r\n\r\nexport default UsersContainer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}