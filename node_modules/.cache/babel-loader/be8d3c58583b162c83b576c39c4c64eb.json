{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nexport const ADD_POST = \"ADD_POST\";\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\nexport const SET_STATUS = \"SET_STATUS\";\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\nexport const DELETE_POST = \"DELETE_POST\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hi,from Java man\",\n    likesCount: 25\n  }, {\n    id: 1,\n    message: \"Python the best_ ho-ho-ho\",\n    likesCount: 55\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostBody,\n          likesCount: 100\n        };\n        return { ...state,\n          posts: [...state.posts, newPost]\n        };\n      }\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post.id !== action.postId)\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport let addPostActionCreator = newPostBody => {\n  return {\n    type: ADD_POST,\n    newPostBody\n  };\n};\nexport let deletePostActionCreator = postId => {\n  return {\n    type: DELETE_POST,\n    postId\n  };\n};\nexport let setUserProfileActionCreator = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile: profile\n  };\n};\nexport let setStatusActionCreator = status => {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\nexport let getStatusThunkCreator = userId => {\n  return async dispatch => {\n    let response = await usersAPI.getStatus(userId);\n    dispatch(setStatusActionCreator(response.data));\n  };\n};\nexport let updateStatusThunkCreator = status => {\n  return dispatch => {\n    usersAPI.updateStatus(status).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatusActionCreator(status));\n      }\n    });\n  };\n};\nexport const setUsersProfileThunkCreator = userId => {\n  return dispatch => {\n    usersAPI.getProfile(userId).then(response => {\n      dispatch(setUserProfileActionCreator(response.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/redux/profileReducer.js"],"names":["usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","UPDATE_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostBody","filter","post","postId","addPostActionCreator","deletePostActionCreator","setUserProfileActionCreator","setStatusActionCreator","getStatusThunkCreator","userId","dispatch","response","getStatus","data","updateStatusThunkCreator","updateStatus","then","resultCode","setUsersProfileThunkCreator","getProfile"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nexport const SET_STATUS = \"SET_STATUS\";\r\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi,from Java man\", likesCount: 25},\r\n        {id: 1, message: \"Python the best_ ho-ho-ho\", likesCount: 55}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostBody,\r\n                likesCount: 100\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId )\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return{\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport let addPostActionCreator = (newPostBody) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody\r\n    }\r\n}\r\n\r\nexport let deletePostActionCreator = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\nexport let setUserProfileActionCreator = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile\r\n    }\r\n}\r\n\r\nexport let setStatusActionCreator = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status: status\r\n    }\r\n}\r\n\r\nexport let getStatusThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getStatus(userId)\r\n            dispatch(setStatusActionCreator(response.data))\r\n        }\r\n}\r\n\r\nexport let updateStatusThunkCreator = (status) => {\r\n    return (dispatch) => {\r\n        usersAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0){\r\n                dispatch(setStatusActionCreator(status))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const setUsersProfileThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setUserProfileActionCreator(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}