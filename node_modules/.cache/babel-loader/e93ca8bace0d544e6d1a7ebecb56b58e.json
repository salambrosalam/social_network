{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"858c15c3-c7f7-4ff2-8f05-b2146fd62275\"\n  }\n});\nexport const getUsers = (currentPage = 2, pageSize = 10) => {\n  return instance.get(`${baseUrl}users?page=${currentPage}&count=${pageSize}`).then(response => {\n    return response.data;\n  });\n};\nexport const followUsers = userId => {\n  return instance.get(`${baseUrl}${userId}`).then(response => {\n    return response.data;\n  });\n};","map":{"version":3,"sources":["C:/react_projects/it-kamasutra/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","baseUrl","then","response","data","followUsers","userId"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAC,IADU;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHiB,CAAb,CAAjB;AAQA,OAAO,MAAMC,QAAQ,GAAG,CAACC,WAAW,GAAG,CAAf,EAAiBC,QAAQ,GAAG,EAA5B,KAAmC;AACvD,SACIP,QAAQ,CAACQ,GAAT,CAAc,GAAEC,OAAQ,cAAaH,WAAY,UAASC,QAAS,EAAnE,EACKG,IADL,CACUC,QAAQ,IAAI;AAClB,WAAOA,QAAQ,CAACC,IAAhB;AACC,GAHL,CADJ;AAOH,CARM;AAUP,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAY;AACnC,SACId,QAAQ,CAACQ,GAAT,CAAc,GAAEC,OAAQ,GAAEK,MAAO,EAAjC,EAEKJ,IAFL,CAEUC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAJL,CADJ;AAQH,CATM","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"858c15c3-c7f7-4ff2-8f05-b2146fd62275\"\r\n    }\r\n});\r\n\r\nexport const getUsers = (currentPage = 2,pageSize = 10) => {\r\n    return (\r\n        instance.get(`${baseUrl}users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n            return response.data\r\n            })\r\n\r\n    )\r\n}\r\n\r\nexport const followUsers = (userId) => {\r\n    return (\r\n        instance.get(`${baseUrl}${userId}`\r\n            )\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}