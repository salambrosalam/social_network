{"ast":null,"code":"import React from\"react\";import{reduxForm,Field}from\"redux-form\";import{Input}from\"../FormsControls/FormControls\";import{requiredField}from\"../../utils/validators/validators\";import{connect}from\"react-redux\";import{loginThunkCreator}from\"../../redux/authReducer\";import{Redirect}from\"react-router-dom\";import classes from\"../FormsControls/formsControls.module.css\";import login_img from\"../../media/login_img.png\";var Login=function Login(props){return/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(\"div\",{className:classes.border},/*#__PURE__*/React.createElement(\"form\",{className:classes.container,onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"img\",{src:login_img,className:classes.img}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Login\"),/*#__PURE__*/React.createElement(Field,{placeholder:\"Login\",className:classes.textInput,name:\"login\",component:Input,validate:[requiredField]})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"password\"),/*#__PURE__*/React.createElement(Field,{placeholder:\"password\",name:\"password\",className:classes.textInput,type:\"password\",component:Input,validate:[requiredField]})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{type:\"checkbox\",name:\"rememberMe\",component:\"input\"}),\"remember me\"),props.error&&/*#__PURE__*/React.createElement(\"div\",{className:classes.formSummaryError},props.error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:classes.button},\"Login\")))));};var ReduxLoginForm=reduxForm({form:\"login\"})(Login);var LoginForm=function LoginForm(props){var onSubmit=function onSubmit(formData){props.login(formData.login,formData.password,formData.rememberMe);};if(props.isAuth){debugger;return/*#__PURE__*/React.createElement(Redirect,{to:\"/profile\"});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(\"h1\",null,\"Login form\"),/*#__PURE__*/React.createElement(ReduxLoginForm,{onSubmit:onSubmit}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{login:function login(email,password,rememberMe){dispatch(loginThunkCreator(email,password,rememberMe));}};};export default connect(mapStateToProps,mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Login/Login.js"],"names":["React","reduxForm","Field","Input","requiredField","connect","loginThunkCreator","Redirect","classes","login_img","Login","props","container","border","handleSubmit","img","textInput","error","formSummaryError","button","ReduxLoginForm","form","LoginForm","onSubmit","formData","login","password","rememberMe","isAuth","mapStateToProps","state","auth","mapDispatchToProps","dispatch","email"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {Input} from \"../FormsControls/FormControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../FormsControls/formsControls.module.css\"\r\nimport login_img from \"../../media/login_img.png\";\r\n\r\nconst Login = (props) => {\r\n    return (<div className={classes.container}>\r\n            <div className={classes.border}>\r\n            <form className={classes.container} onSubmit={props.handleSubmit}>\r\n                <img src={login_img} className={classes.img}/>\r\n                <div>\r\n                    <div>Login</div>\r\n                    <Field placeholder=\"Login\"\r\n                           className={classes.textInput}\r\n                           name={\"login\"}\r\n                           component={Input}\r\n                           validate={[requiredField]}/>\r\n                </div>\r\n                <div>\r\n                    <div>password</div>\r\n                    <Field placeholder=\"password\"\r\n                           name={\"password\"}\r\n                           className={classes.textInput}\r\n                           type={\"password\"}\r\n                           component={Input}\r\n                           validate={[requiredField]}/>\r\n                </div>\r\n                <div >\r\n                    <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/>remember me\r\n                </div>\r\n                {props.error && <div className={classes.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button className={classes.button}>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: \"login\"\r\n})(Login)\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const onSubmit = formData => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        debugger;\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div className={classes.container }>\r\n        <h1>Login form</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (email, password, rememberMe) => {\r\n            dispatch(loginThunkCreator(email, password, rememberMe))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}