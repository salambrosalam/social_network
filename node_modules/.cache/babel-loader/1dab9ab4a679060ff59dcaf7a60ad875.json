{"ast":null,"code":"import React from\"react\";import classes from\"./Dialogs.module.css\";import DialogItem from\"./DialogItem/DialogItem\";import MessageItem from\"./Message/MessageItem\";import{Redirect}from\"react-router-dom\";import{reduxForm,Field}from\"redux-form\";import{TextArea}from\"../FormsControls/FormControls\";import{maxLengthCreator,requiredField}from\"../../utils/validators/validators\";//ИЗБЕГАЙ ДУБЛИРОВАНИЯ КОДА!!!\n//REFACTOR!!!\nvar Dialogs=function Dialogs(props){var state=props.messagesPage;var dialogsElements=state.dialogs.map(function(dialog){return/*#__PURE__*/React.createElement(DialogItem,{name:dialog.name,id:dialog.id});});var messageElements=state.messages.map(function(message){return/*#__PURE__*/React.createElement(MessageItem,{message:message.message,id:message.id});});var addNewMessage=function addNewMessage(values){props.sendMessage(values.newMessageBody);};if(!props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.dialogs},/*#__PURE__*/React.createElement(\"div\",{className:classes.dialogs_items},dialogsElements),/*#__PURE__*/React.createElement(\"div\",{className:classes.messages},/*#__PURE__*/React.createElement(\"div\",null,messageElements),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(ReduxAddMessageForm,{onSubmit:addNewMessage})));};var maxLength100=maxLengthCreator(100);var addMessageForm=function addMessageForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(Field,{component:TextArea,validate:[requiredField,maxLength100],name:\"newMessageBody\",placeholder:\"enter new message\"}),/*#__PURE__*/React.createElement(\"button\",null,\"Send\"));};var ReduxAddMessageForm=reduxForm({form:\"addMessageForm\"})(addMessageForm);export default Dialogs;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Dialogs/Dialogs.js"],"names":["React","classes","DialogItem","MessageItem","Redirect","reduxForm","Field","TextArea","maxLengthCreator","requiredField","Dialogs","props","state","messagesPage","dialogsElements","dialogs","map","dialog","name","id","messageElements","messages","message","addNewMessage","values","sendMessage","newMessageBody","isAuth","dialogs_items","maxLength100","addMessageForm","handleSubmit","ReduxAddMessageForm","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,OAAQC,SAAR,CAAkBC,KAAlB,KAA8B,YAA9B,CACA,OAAQC,QAAR,KAAuB,+BAAvB,CACA,OAAQC,gBAAR,CAA0BC,aAA1B,KAA8C,mCAA9C,CAEA;AACA;AAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvB,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,YAAlB,CAEA,GAAIC,CAAAA,eAAe,CAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,qBACpC,oBAAC,UAAD,EAAY,IAAI,CAAEA,MAAM,CAACC,IAAzB,CAA+B,EAAE,CAAED,MAAM,CAACE,EAA1C,EADoC,EAAlB,CAAtB,CAIA,GAAIC,CAAAA,eAAe,CAAGR,KAAK,CAACS,QAAN,CAAeL,GAAf,CAAmB,SAACM,OAAD,qBACrC,oBAAC,WAAD,EAAa,OAAO,CAAEA,OAAO,CAACA,OAA9B,CAAuC,EAAE,CAAEA,OAAO,CAACH,EAAnD,EADqC,EAAnB,CAAtB,CAIA,GAAII,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAY,CAC5Bb,KAAK,CAACc,WAAN,CAAkBD,MAAM,CAACE,cAAzB,EACH,CAFD,CAIA,GAAG,CAACf,KAAK,CAACgB,MAAV,CAAiB,CACb,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CACH,CACD,mBACI,2BAAK,SAAS,CAAE1B,OAAO,CAACc,OAAxB,eACI,2BAAK,SAAS,CAAEd,OAAO,CAAC2B,aAAxB,EACKd,eADL,CADJ,cAII,2BAAK,SAAS,CAAEb,OAAO,CAACoB,QAAxB,eACI,+BACKD,eADL,CADJ,cAII,8BAJJ,cAKI,oBAAC,mBAAD,EAAqB,QAAQ,CAAEG,aAA/B,EALJ,CAJJ,CADJ,CAcH,CAhCD,CAkCA,GAAIM,CAAAA,YAAY,CAAGrB,gBAAgB,CAAC,GAAD,CAAnC,CAEA,GAAMsB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAnB,KAAK,CAAI,CAC5B,mBACI,4BAAM,QAAQ,CAAEA,KAAK,CAACoB,YAAtB,eACI,oBAAC,KAAD,EAAO,SAAS,CAAExB,QAAlB,CAA4B,QAAQ,CAAE,CAACE,aAAD,CAAgBoB,YAAhB,CAAtC,CAAqE,IAAI,CAAC,gBAA1E,CAA2F,WAAW,CAAC,mBAAvG,EADJ,cAEI,yCAFJ,CADJ,CAMH,CAPD,CASA,GAAMG,CAAAA,mBAAmB,CAAG3B,SAAS,CAAC,CAClC4B,IAAI,CAAE,gBAD4B,CAAD,CAAT,CAEzBH,cAFyB,CAA5B,CAIA,cAAepB,CAAAA,OAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {TextArea} from \"../FormsControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n//ИЗБЕГАЙ ДУБЛИРОВАНИЯ КОДА!!!\r\n//REFACTOR!!!\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map((dialog) =>\r\n        <DialogItem name={dialog.name} id={dialog.id}/>\r\n    );\r\n\r\n    let messageElements = state.messages.map((message) =>\r\n        <MessageItem message={message.message} id={message.id}/>\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if(!props.isAuth){\r\n        return <Redirect to={\"/login\"} />\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>\r\n                    {messageElements}\r\n                </div>\r\n                <hr/>\r\n                <ReduxAddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength100 = maxLengthCreator(100);\r\n\r\nconst addMessageForm = props => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} validate={[requiredField, maxLength100]} name=\"newMessageBody\" placeholder=\"enter new message\" />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddMessageForm = reduxForm({\r\n    form: \"addMessageForm\"\r\n})(addMessageForm)\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}