{"ast":null,"code":"import React from\"react\";import Dialogs from\"./Dialogs\";import{sendMessageActionCreator}from\"../../redux/dialogsReducer\";import{connect}from\"react-redux\";import{WithAuthRedirect}from\"../../hoc/withAuthRedirect\";import{compose}from\"redux\";var mapStateToProps=function mapStateToProps(state){return{messagesPage:state.messagesPage};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{sendMessage:function sendMessage(newMessageBody){dispatch(sendMessageActionCreator(newMessageBody));}};};export var DialogsContainer=compose(WithAuthRedirect,connect(mapStateToProps,mapDispatchToProps))(Dialogs);","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Dialogs/DialogsContainer.js"],"names":["React","Dialogs","sendMessageActionCreator","connect","WithAuthRedirect","compose","mapStateToProps","state","messagesPage","mapDispatchToProps","dispatch","sendMessage","newMessageBody","DialogsContainer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,wBAAR,KAAuC,4BAAvC,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAR,KAA+B,4BAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CAEA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHC,YAAY,CAAED,KAAK,CAACC,YADjB,CAAP,CAIH,CALD,CAMA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHC,WAAW,CAAE,qBAACC,cAAD,CAAoB,CAC7BF,QAAQ,CAACR,wBAAwB,CAACU,cAAD,CAAzB,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CAQA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGR,OAAO,CACnCD,gBADmC,CAEnCD,OAAO,CAACG,eAAD,CAAiBG,kBAAjB,CAF4B,CAAP,CAG9BR,OAH8B,CAAzB","sourcesContent":["import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(Dialogs);"]},"metadata":{},"sourceType":"module"}