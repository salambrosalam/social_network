{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_projects\\\\it-kamasutra\\\\src\\\\components\\\\Dialogs\\\\Dialogs.js\";\nimport React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./Message/MessageItem\";\nimport { Redirect } from \"react-router-dom\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { TextArea } from \"../FormsControls/FormControls\";\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\"; //ИЗБЕГАЙ ДУБЛИРОВАНИЯ КОДА!!!\n//REFACTOR!!!\n\nconst Dialogs = props => {\n  let state = props.messagesPage;\n  let dialogsElements = state.dialogs.map(dialog => /*#__PURE__*/React.createElement(DialogItem, {\n    name: dialog.name,\n    id: dialog.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }));\n  let messageElements = state.messages.map(message => /*#__PURE__*/React.createElement(MessageItem, {\n    message: message.message,\n    id: message.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }));\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogs_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, dialogsElements), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, messageElements), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ReduxAddMessageForm, {\n    onSubmit: addNewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n};\n\nlet maxLength100 = maxLengthCreator(100);\n\nconst addMessageForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: TextArea,\n    validate: [requiredField, maxLength100],\n    name: \"newMessageBody\",\n    placeholder: \"enter new message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\n\nconst ReduxAddMessageForm = reduxForm({\n  form: \"addMessageForm\"\n})(addMessageForm);\nexport default Dialogs;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Dialogs/Dialogs.js"],"names":["React","classes","DialogItem","MessageItem","Redirect","reduxForm","Field","TextArea","maxLengthCreator","requiredField","Dialogs","props","state","messagesPage","dialogsElements","dialogs","map","dialog","name","id","messageElements","messages","message","addNewMessage","values","sendMessage","newMessageBody","isAuth","dialogs_items","maxLength100","addMessageForm","handleSubmit","ReduxAddMessageForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,SAAR,EAAkBC,KAAlB,QAA8B,YAA9B;AACA,SAAQC,QAAR,QAAuB,+BAAvB;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,QAA8C,mCAA9C,C,CAEA;AACA;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,YAAlB;AAEA,MAAIC,eAAe,GAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAmBC,MAAD,iBACpC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,CAAtB;AAIA,MAAIC,eAAe,GAAGR,KAAK,CAACS,QAAN,CAAeL,GAAf,CAAoBM,OAAD,iBACrC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAO,CAACA,OAA9B;AAAuC,IAAA,EAAE,EAAEA,OAAO,CAACH,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,CAAtB;;AAIA,MAAII,aAAa,GAAIC,MAAD,IAAY;AAC5Bb,IAAAA,KAAK,CAACc,WAAN,CAAkBD,MAAM,CAACE,cAAzB;AACH,GAFD;;AAIA,MAAG,CAACf,KAAK,CAACgB,MAAV,EAAiB;AACb,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAACc,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAAC2B,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,eADL,CADJ,eAII;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACoB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,eADL,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAEG,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAJJ,CADJ;AAcH,CAhCD;;AAkCA,IAAIM,YAAY,GAAGrB,gBAAgB,CAAC,GAAD,CAAnC;;AAEA,MAAMsB,cAAc,GAAGnB,KAAK,IAAI;AAC5B,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACoB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAExB,QAAlB;AAA4B,IAAA,QAAQ,EAAE,CAACE,aAAD,EAAgBoB,YAAhB,CAAtC;AAAqE,IAAA,IAAI,EAAC,gBAA1E;AAA2F,IAAA,WAAW,EAAC,mBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAMH,CAPD;;AASA,MAAMG,mBAAmB,GAAG3B,SAAS,CAAC;AAClC4B,EAAAA,IAAI,EAAE;AAD4B,CAAD,CAAT,CAEzBH,cAFyB,CAA5B;AAIA,eAAepB,OAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {TextArea} from \"../FormsControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n//ИЗБЕГАЙ ДУБЛИРОВАНИЯ КОДА!!!\r\n//REFACTOR!!!\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map((dialog) =>\r\n        <DialogItem name={dialog.name} id={dialog.id}/>\r\n    );\r\n\r\n    let messageElements = state.messages.map((message) =>\r\n        <MessageItem message={message.message} id={message.id}/>\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if(!props.isAuth){\r\n        return <Redirect to={\"/login\"} />\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>\r\n                    {messageElements}\r\n                </div>\r\n                <hr/>\r\n                <ReduxAddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength100 = maxLengthCreator(100);\r\n\r\nconst addMessageForm = props => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} validate={[requiredField, maxLength100]} name=\"newMessageBody\" placeholder=\"enter new message\" />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddMessageForm = reduxForm({\r\n    form: \"addMessageForm\"\r\n})(addMessageForm)\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}