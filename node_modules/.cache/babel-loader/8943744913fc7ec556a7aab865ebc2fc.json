{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_projects\\\\it-kamasutra\\\\src\\\\components\\\\Users\\\\Paginator.js\";\nimport React, { useState } from \"react\";\nimport classes from \"./Users.module.css\";\n\nlet Paginator = props => {\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / props.pagePortionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * props.pagePortionSize + 1;\n  let rightPortionPageNumber = portionNumber * props.pagePortionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, portionNumber > 1 ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"prev\") : null, pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.selectedPage ? p === props.currentPage : props.page,\n      key: p,\n      onClick: e => {\n        props.onPageChanged(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }\n    }, p);\n  }), portionCount > portionNumber ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"next\") : null);\n};\n\nexport default Paginator;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Users/Paginator.js"],"names":["React","useState","classes","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","pagePortionSize","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","page","filter","p","map","selectedPage","currentPage","e","onPageChanged"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAIC,SAAS,GAAGC,KAAK,IAAI;AACrB,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAjB;AAEA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,GAACD,KAAK,CAACU,eAA3B,CAAnB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBX,KAAK,CAACU,eAA5B,GAA8C,CAA1E;AACA,MAAII,sBAAsB,GAAGH,aAAa,GAAGX,KAAK,CAACU,eAAnD;AAGA,sBACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACiB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,aAAa,GAAG,CAAhB,gBACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAoC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,GAC6E,IAFlF,EAIKL,KAAK,CAACU,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAIH,sBAArD,EACII,GADJ,CACQD,CAAC,IAAI;AACN,wBAAO;AACH,MAAA,SAAS,EAAEnB,OAAO,CAACqB,YAAR,GAAuBF,CAAC,KAAKjB,KAAK,CAACoB,WAAnC,GAAiDpB,KAAK,CAACe,IAD/D;AAEH,MAAA,GAAG,EAAEE,CAFF;AAGH,MAAA,OAAO,EAAEI,CAAC,IAAI;AAACrB,QAAAA,KAAK,CAACsB,aAAN,CAAoBD,CAApB;AAAuB,OAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGsCJ,CAHtC,CAAP;AAIH,GANJ,CAJL,EAWKR,YAAY,GAAGE,aAAf,gBACG;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAoC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GACiF,IAZtF,CADJ;AAgBH,CA9BD;;AAgCA,eAAeZ,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport classes from \"./Users.module.css\"\r\n\r\nlet Paginator = props => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/props.pagePortionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.pagePortionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.pagePortionSize;\r\n\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            {portionNumber > 1 ?\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>prev</button> : null}\r\n\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span\r\n                        className={classes.selectedPage ? p === props.currentPage : props.page}\r\n                        key={p}\r\n                        onClick={e => {props.onPageChanged(e)}}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber ?\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1)}}>next</button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}