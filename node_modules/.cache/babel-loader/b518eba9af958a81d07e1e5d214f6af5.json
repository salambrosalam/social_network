{"ast":null,"code":"import { authoriseMeThunkCreator } from \"./authReducer\";\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\nlet initialState = {\n  initialized: false\n};\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\nexport const initializedSuccessActionCreator = () => {\n  return {\n    type: SET_INITIALIZED\n  };\n};\nexport const initializeThunkCreator = () => {\n  return dispatch => {\n    let promise = dispatch(authoriseMeThunkCreator());\n    promise.then(() => {\n      dispatch(initializedSuccessActionCreator());\n    });\n  };\n};","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/redux/appReducer.js"],"names":["authoriseMeThunkCreator","SET_INITIALIZED","initialState","initialized","appReducer","state","action","type","initializedSuccessActionCreator","initializeThunkCreator","dispatch","promise","then"],"mappings":"AAAA,SAAQA,uBAAR,QAAsC,eAAtC;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;AAIA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAL;AACI,aAAM,EACF,GAAGI,KADD;AAEFF,QAAAA,WAAW,EAAE;AAFX,OAAN;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVM;AAYP,OAAO,MAAMG,+BAA+B,GAAG,MAAM;AACjD,SAAM;AACFD,IAAAA,IAAI,EAAEN;AADJ,GAAN;AAGH,CAJM;AAMP,OAAO,MAAMQ,sBAAsB,GAAG,MAAM;AACxC,SAAOC,QAAD,IAAc;AAChB,QAAIC,OAAO,GAAGD,QAAQ,CAACV,uBAAuB,EAAxB,CAAtB;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAa,MAAM;AACfF,MAAAA,QAAQ,CAACF,+BAA+B,EAAhC,CAAR;AACH,KAFD;AAGH,GALD;AAMH,CAPM","sourcesContent":["import {authoriseMeThunkCreator} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_INITIALIZED:\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccessActionCreator = () => {\r\n    return{\r\n        type: SET_INITIALIZED\r\n    }\r\n}\r\n\r\nexport const initializeThunkCreator = () => {\r\n    return(dispatch) => {\r\n        let promise = dispatch(authoriseMeThunkCreator())\r\n        promise.then(() => {\r\n            dispatch(initializedSuccessActionCreator())\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}