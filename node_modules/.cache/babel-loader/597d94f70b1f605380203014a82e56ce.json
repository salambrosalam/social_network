{"ast":null,"code":"import React from\"react\";import{reduxForm,Field}from\"redux-form\";import{Input}from\"../FormsControls/FormControls\";import{requiredField}from\"../../utils/validators/validators\";import{connect}from\"react-redux\";import{loginThunkCreator}from\"../../redux/authReducer\";import{Redirect}from\"react-router-dom\";import classes from\"../FormsControls/formsControls.module.css\";var Login=function Login(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{placeholder:\"Login\",name:\"login\",component:Input,validate:[requiredField]})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{placeholder:\"password\",name:\"password\",type:\"password\",component:Input,validate:[requiredField]})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{type:\"checkbox\",name:\"rememberMe\",component:\"input\"}),\"remember me\"),props.error&&/*#__PURE__*/React.createElement(\"div\",{className:classes.formSummaryError},props.error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"Login\")));};var ReduxLoginForm=reduxForm({form:\"login\"})(Login);var LoginForm=function LoginForm(props){var onSubmit=function onSubmit(formData){props.login(formData.login,formData.password,formData.rememberMe);};if(props.isAuth){debugger;return/*#__PURE__*/React.createElement(Redirect,{to:\"/profile\"});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(ReduxLoginForm,{onSubmit:onSubmit}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{login:function login(email,password,rememberMe){dispatch(loginThunkCreator(email,password,rememberMe));}};};export default connect(mapStateToProps,mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Login/Login.js"],"names":["React","reduxForm","Field","Input","requiredField","connect","loginThunkCreator","Redirect","classes","Login","props","handleSubmit","error","formSummaryError","ReduxLoginForm","form","LoginForm","onSubmit","formData","login","password","rememberMe","isAuth","mapStateToProps","state","auth","mapDispatchToProps","dispatch","email"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,CAAkBC,KAAlB,KAA8B,YAA9B,CACA,OAAQC,KAAR,KAAoB,+BAApB,CACA,OAAQC,aAAR,KAA4B,mCAA5B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,iBAAR,KAAgC,yBAAhC,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2CAApB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,mBACQ,4BAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,eACI,4CACI,oBAAC,KAAD,EAAO,WAAW,CAAC,OAAnB,CACO,IAAI,CAAE,OADb,CAEO,SAAS,CAAER,KAFlB,CAGO,QAAQ,CAAE,CAACC,aAAD,CAHjB,EADJ,CADJ,cAOI,4CACI,oBAAC,KAAD,EAAO,WAAW,CAAC,UAAnB,CACO,IAAI,CAAE,UADb,CAEO,IAAI,CAAE,UAFb,CAGO,SAAS,CAAED,KAHlB,CAIO,QAAQ,CAAE,CAACC,aAAD,CAJjB,EADJ,CAPJ,cAcI,4CACI,oBAAC,KAAD,EAAO,IAAI,CAAE,UAAb,CAAyB,IAAI,CAAE,YAA/B,CAA6C,SAAS,CAAE,OAAxD,EADJ,eAdJ,CAiBKM,KAAK,CAACE,KAAN,eAAe,2BAAK,SAAS,CAAEJ,OAAO,CAACK,gBAAxB,EACXH,KAAK,CAACE,KADK,CAjBpB,cAqBI,4CACI,0CADJ,CArBJ,CADR,CA2BH,CA5BD,CA8BA,GAAME,CAAAA,cAAc,CAAGb,SAAS,CAAC,CAC7Bc,IAAI,CAAE,OADuB,CAAD,CAAT,CAEpBN,KAFoB,CAAvB,CAIA,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACN,KAAD,CAAW,CAEzB,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,QAAQ,CAAI,CACzBR,KAAK,CAACS,KAAN,CAAYD,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAGA,GAAIX,KAAK,CAACY,MAAV,CAAiB,CACb,SACA,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAED,mBAAO,4CACH,sCADG,cAEH,oBAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFG,CAAP,CAIH,CAdD,CAgBA,GAAIM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADhB,CAAP,CAGH,CAJD,CAMA,GAAII,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHR,KAAK,CAAE,eAACS,KAAD,CAAQR,QAAR,CAAkBC,UAAlB,CAAiC,CACpCM,QAAQ,CAACrB,iBAAiB,CAACsB,KAAD,CAAQR,QAAR,CAAkBC,UAAlB,CAAlB,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CAQA,cAAehB,CAAAA,OAAO,CAACkB,eAAD,CAAiBG,kBAAjB,CAAP,CAA4CV,SAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {Input} from \"../FormsControls/FormControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../FormsControls/formsControls.module.css\"\r\n\r\nconst Login = (props) => {\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder=\"Login\"\r\n                           name={\"login\"}\r\n                           component={Input}\r\n                           validate={[requiredField]}/>\r\n                </div>\r\n                <div>\r\n                    <Field placeholder=\"password\"\r\n                           name={\"password\"}\r\n                           type={\"password\"}\r\n                           component={Input}\r\n                           validate={[requiredField]}/>\r\n                </div>\r\n                <div>\r\n                    <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/>remember me\r\n                </div>\r\n                {props.error && <div className={classes.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: \"login\"\r\n})(Login)\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const onSubmit = formData => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth){\r\n        debugger;\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (email, password, rememberMe) => {\r\n            dispatch(loginThunkCreator(email, password, rememberMe))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}