{"ast":null,"code":"import hacker from \"../media/hacker.jpg\";\nimport { usersAPI } from \"../api/api\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOW_PROGRESS = \"TOGGLE_IS_FOLLOW_PROGRESS\";\nconst initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 19,\n  currentPage: 2,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: true\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: false\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_USERS_TOTAL_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOW_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followActionCreator = userId => {\n  return {\n    type: FOLLOW,\n    userId: userId\n  };\n};\nexport const unfollowActionCreator = userId => {\n  return {\n    type: UNFOLLOW,\n    userId: userId\n  };\n};\nexport const setUsersActionCreator = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport const setCurrentPageActionCreator = pageNumber => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: pageNumber\n  };\n};\nexport const setTotalUsersCountActionCreator = totalCount => {\n  return {\n    type: SET_USERS_TOTAL_COUNT,\n    totalUsersCount: totalCount\n  };\n};\nexport const toggleFollowingProgressActionCreator = (isFetching, userId) => {\n  return {\n    type: TOGGLE_IS_FOLLOW_PROGRESS,\n    isFetching: isFetching,\n    userId: userId\n  };\n};\nexport const setIsFetchingActionCreator = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching: isFetching\n  };\n};\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setIsFetchingActionCreator(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(setIsFetchingActionCreator(false));\n      dispatch(setUsersActionCreator(data.items));\n      dispatch(setTotalUsersCountActionCreator(data.totalCount));\n    });\n  };\n};\nexport const followThunkCreator = userId => {\n  return dispatch => {\n    dispatch(toggleFollowingProgressActionCreator(true, userId));\n    usersAPI.followUsers(userId).then(data => {\n      if (data.resultCode === 0) {\n        props.follow(userId);\n      }\n\n      props.toggleProgress(false, userId);\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/react_projects/it-kamasutra/src/redux/usersReducer.js"],"names":["hacker","usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOW_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","user","id","userId","followed","filter","followActionCreator","unfollowActionCreator","setUsersActionCreator","setCurrentPageActionCreator","pageNumber","setTotalUsersCountActionCreator","totalCount","toggleFollowingProgressActionCreator","setIsFetchingActionCreator","getUsersThunkCreator","dispatch","getUsers","then","data","items","followThunkCreator","followUsers","resultCode","props","follow","toggleProgress"],"mappings":"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","sourcesContent":["import hacker from \"../media/hacker.jpg\"\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOW_PROGRESS = \"TOGGLE_IS_FOLLOW_PROGRESS\"\r\n\r\nconst initialState = {\r\n    users: [\r\n    ],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId){\r\n                        return {...user,followed:true}\r\n                    }\r\n                    return(\r\n                    user\r\n                    )\r\n                })\r\n\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId){\r\n                        return {...user,followed:false}\r\n                    }\r\n                    return(\r\n                        user\r\n                    )\r\n                })\r\n\r\n            }\r\n        case SET_USERS:\r\n            return{\r\n                ...state, users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return{\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return{\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return{\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOW_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followActionCreator = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const unfollowActionCreator = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const setUsersActionCreator = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\nexport const setCurrentPageActionCreator = (pageNumber) =>{\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: pageNumber\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCountActionCreator = (totalCount) => {\r\n    return {\r\n        type: SET_USERS_TOTAL_COUNT,\r\n        totalUsersCount: totalCount\r\n    }\r\n}\r\n\r\nexport const toggleFollowingProgressActionCreator = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOW_PROGRESS,\r\n        isFetching: isFetching,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const setIsFetchingActionCreator = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsFetchingActionCreator(true));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetchingActionCreator(false));\r\n            dispatch(setUsersActionCreator(data.items));\r\n            dispatch(setTotalUsersCountActionCreator(data.totalCount));\r\n        });\r\n    }\r\n}\r\n\r\nexport const followThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgressActionCreator(true, userId));\r\n        usersAPI.followUsers(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                props.follow(userId)\r\n            }\r\n            props.toggleProgress(false, userId);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}