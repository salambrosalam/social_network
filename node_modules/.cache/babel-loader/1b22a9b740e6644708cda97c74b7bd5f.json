{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_projects\\\\it-kamasutra\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileStatusWithHooks.js\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = props => {\n  //useState - возвращает массив в котором первый элемент это то с чем мы работаем, а второй функция позволяющая менять этот обьект\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateMode = () => {\n    setEditMode(true);\n  };\n\n  const deActivateMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = event => {\n    setStatus(event.currentTarget.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !editMode ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: activateMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Status: \", props.status || \"Nostatus\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onStatusChange,\n    autoFocus: true,\n    value: status,\n    onBlur: deActivateMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default ProfileStatusWithHooks;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.js"],"names":["React","useEffect","useState","ProfileStatusWithHooks","props","editMode","setEditMode","status","setStatus","activateMode","deActivateMode","updateStatus","onStatusChange","event","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAEtC;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACE,KAAK,CAACG,MAAP,CAAlC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAACJ,KAAK,CAACG,MAAP,CAAT;AACH,GAFQ,EAEN,CAACH,KAAK,CAACG,MAAP,CAFM,CAAT;;AAIA,QAAME,YAAY,GAAG,MAAM;AACvBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMI,cAAc,GAAG,MAAM;AACzBJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,KAAK,CAACO,YAAN,CAAmBJ,MAAnB;AACH,GAHD;;AAKA,QAAMK,cAAc,GAAGC,KAAK,IAAI;AAC5BL,IAAAA,SAAS,CAACK,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAT;AACH,GAFD;;AAII,sBACI,0CAAG,CAACV,QAAD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,OAAO,EAAEI,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsCL,KAAK,CAACG,MAAN,IAAgB,UAAtD,CADJ,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEK,cAAjB;AAAiC,IAAA,SAAS,EAAE,IAA5C;AAAkD,IAAA,KAAK,EAAEL,MAAzD;AAAiE,IAAA,MAAM,EAAEG,cAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAYP,CAnCD;;AAqCA,eAAeP,sBAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    //useState - возвращает массив в котором первый элемент это то с чем мы работаем, а второй функция позволяющая менять этот обьект\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = event => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <>{!editMode ?\r\n                <div>\r\n                    <span onClick={activateMode}>Status: {props.status || \"Nostatus\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deActivateMode}/>\r\n                </div>\r\n            }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n"]},"metadata":{},"sourceType":"module"}