{"ast":null,"code":"import _slicedToArray from\"E:\\\\react_projects\\\\it-kamasutra\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";var ProfileStatusWithHooks=function ProfileStatusWithHooks(props){//useState - возвращает массив в котором первый элемент это то с чем мы работаем, а второй функция позволяющая менять этот обьект\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _useState3=useState(props.status),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];useEffect(function(){setStatus(props.status);},[props.status]);var activateMode=function activateMode(){setEditMode(true);};var deActivateMode=function deActivateMode(){setEditMode(false);props.updateStatus(status);};var onStatusChange=function onStatusChange(event){setStatus(event.currentTarget.value);};return/*#__PURE__*/React.createElement(React.Fragment,null,!editMode?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{onClick:activateMode},props.status||\"Nostatus\")):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{onChange:onStatusChange,autoFocus:true,value:status,onBlur:deActivateMode})));};export default ProfileStatusWithHooks;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.js"],"names":["React","useEffect","useState","ProfileStatusWithHooks","props","editMode","setEditMode","status","setStatus","activateMode","deActivateMode","updateStatus","onStatusChange","event","currentTarget","value"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CAEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAW,CAEtC;AAFsC,cAGRF,QAAQ,CAAC,KAAD,CAHA,wCAGjCG,QAHiC,eAGvBC,WAHuB,8BAIZJ,QAAQ,CAACE,KAAK,CAACG,MAAP,CAJI,yCAIjCA,MAJiC,eAIzBC,SAJyB,eAMtCP,SAAS,CAAC,UAAM,CACZO,SAAS,CAACJ,KAAK,CAACG,MAAP,CAAT,CACH,CAFQ,CAEN,CAACH,KAAK,CAACG,MAAP,CAFM,CAAT,CAIA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBH,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAIA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBJ,WAAW,CAAC,KAAD,CAAX,CACAF,KAAK,CAACO,YAAN,CAAmBJ,MAAnB,EACH,CAHD,CAKA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,CAC5BL,SAAS,CAACK,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAT,CACH,CAFD,CAII,mBACI,wCAAG,CAACV,QAAD,cACC,4CACI,4BAAM,OAAO,CAAEI,YAAf,EAA8BL,KAAK,CAACG,MAAN,EAAgB,UAA9C,CADJ,CADD,cAKC,4CACI,6BAAO,QAAQ,CAAEK,cAAjB,CAAiC,SAAS,CAAE,IAA5C,CAAkD,KAAK,CAAEL,MAAzD,CAAiE,MAAM,CAAEG,cAAzE,EADJ,CALJ,CADJ,CAYP,CAnCD,CAqCA,cAAeP,CAAAA,sBAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    //useState - возвращает массив в котором первый элемент это то с чем мы работаем, а второй функция позволяющая менять этот обьект\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = event => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <>{!editMode ?\r\n                <div>\r\n                    <span onClick={activateMode}>{props.status || \"Nostatus\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deActivateMode}/>\r\n                </div>\r\n            }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;"]},"metadata":{},"sourceType":"module"}