{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_projects\\\\it-kamasutra\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followActionCreator, setCurrentPageActionCreator, setIsFetchingActionCreator, setTotalUsersCountActionCreator, setUsersActionCreator, unfollowActionCreator } from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport loader from \"../../media/loader.svg\";\nimport loader_2 from \"../../media/loader_2.svg\";\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.isFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(\"img\", {\n      src: loader_2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 42\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      currentPage: this.props.currentPage,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      setCurrentPage: this.props.setCurrentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followActionCreator(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowActionCreator(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersActionCreator(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageActionCreator(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountActionCreator(totalCount));\n    },\n    setIsFetching: isFetching => {\n      dispatch(setIsFetchingActionCreator(isFetching));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["C:/react_projects/it-kamasutra/src/components/Users/UsersContainer.js"],"names":["React","connect","followActionCreator","setCurrentPageActionCreator","setIsFetchingActionCreator","setTotalUsersCountActionCreator","setUsersActionCreator","unfollowActionCreator","axios","Users","UsersAPIComponent","Component","onPageChanged","pageNumber","props","setCurrentPage","setIsFetching","get","pageSize","then","response","isFetching","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","loader_2","totalUsersCount","follow","unfollow","users","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId","UsersContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followActionCreator,\r\n    setCurrentPageActionCreator, setIsFetchingActionCreator, setTotalUsersCountActionCreator,\r\n    setUsersActionCreator,\r\n    unfollowActionCreator\r\n} from \"../../redux/usersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport loader from \"../../media/loader.svg\"\r\nimport loader_2 from \"../../media/loader_2.svg\"\r\n\r\nclass UsersAPIComponent extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.isFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <img src={loader_2}/> : null}\r\n                <Users currentPage={this.props.currentPage}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       setCurrentPage={this.props.setCurrentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followActionCreator(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowActionCreator(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersActionCreator(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageActionCreator(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountActionCreator(totalCount))\r\n        },\r\n        setIsFetching: (isFetching) => {\r\n            dispatch(setIsFetchingActionCreator(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);\r\n\r\nexport default UsersContainer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}