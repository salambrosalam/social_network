{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_projects\\\\it-kamasutra\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileStatusWithHooks.js\";\nimport React, { useState } from \"react\";\nimport Loader from \"../../Loader/Loader\";\n\nconst ProfileStatusWithHooks = props => {\n  //useState - возвращает массив в котором первый элемент это то с чем мы работаем, а второй функция позволяющая менять этот обьект\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  const activateMode = () => {\n    setEditMode(true);\n  };\n\n  const deActivateMode = () => {\n    setEditMode(false);\n  };\n\n  const onStatusChange = event => {\n    setStatus(event.currentTarget.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !editMode ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: activateMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, props.status || \"Nostatus\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onStatusChange,\n    autoFocus: true,\n    value: status,\n    onBlur: deActivateMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default ProfileStatusWithHooks;","map":{"version":3,"sources":["E:/react_projects/it-kamasutra/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.js"],"names":["React","useState","Loader","ProfileStatusWithHooks","props","editMode","setEditMode","status","setStatus","activateMode","deActivateMode","onStatusChange","event","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAEtC;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,KAAK,CAACG,MAAP,CAAlC;;AAEA,QAAME,YAAY,GAAG,MAAM;AACvBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMI,cAAc,GAAG,MAAM;AACzBJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMK,cAAc,GAAGC,KAAK,IAAI;AAC5BJ,IAAAA,SAAS,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAT;AACH,GAFD;;AAII,sBACI,0CAAG,CAACT,QAAD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,OAAO,EAAEI,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BL,KAAK,CAACG,MAAN,IAAgB,UAA9C,CADJ,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEI,cAAjB;AAAiC,IAAA,SAAS,EAAE,IAA5C;AAAkD,IAAA,KAAK,EAAEJ,MAAzD;AAAiE,IAAA,MAAM,EAAEG,cAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAYP,CA9BD;;AAgCA,eAAeP,sBAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    //useState - возвращает массив в котором первый элемент это то с чем мы работаем, а второй функция позволяющая менять этот обьект\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onStatusChange = event => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <>{!editMode ?\r\n                <div>\r\n                    <span onClick={activateMode}>{props.status || \"Nostatus\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deActivateMode}/>\r\n                </div>\r\n            }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;"]},"metadata":{},"sourceType":"module"}