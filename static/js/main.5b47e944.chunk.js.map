{"version":3,"sources":["components/Friends/Friend/Friend.module.css","media/hacker.jpg","media/loader_2.svg","components/Friends/Friends.module.css","components/Profile/myPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/myPosts/Post/Post.js","components/Profile/myPosts/MyPosts.js","components/Profile/myPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","api/api.js","components/Navbar/Navbar.module.css","redux/profileReducer.js","serviceWorker.js","redux/dialogsReducer.js","redux/sidebarReducer.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux_store.js","components/Friends/Friend/Friend.js","components/Friends/Friends.js","components/Navbar/Navbar.js","components/News/News.js","components/Settings/Settings.js","components/Music/Music.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/MessageItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Users/Paginator.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","App.js","index.js","components/Dialogs/Dialogs.module.css","utils/validators/validators.js","components/FormsControls/FormControls.js","components/FormsControls/formsControls.module.css","media/create_account_2_anonymous.png","hoc/withAuthRedirect.js","components/Loader/Loader.js","components/Users/Users.module.css","components/Header/Header.module.css"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","event","currentTarget","value","autoFocus","onBlur","updateStatus","onClick","ProfileInfo","profile","Loader","contacts","facebook","website","vk","twitter","instagram","youtube","map","item","src","photos","large","aboutMe","lookingForAJobDescription","Post","className","classes","anonymous","message","likeCounts","maxLength30","maxLengthCreator","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","validate","requiredField","placeholder","addPost","MyPosts","postElements","posts","post","likesCount","values","newPostBody","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","setUsersProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","React","Component","compose","auth","isAuth","setUserProfileActionCreator","withRouter","WithAuthRedirect","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","followUsers","UNfollowUsers","delete","authoriseMe","getProfile","getStatus","put","login","email","password","rememberMe","logout","initialState","id","type","setStatusActionCreator","a","response","data","resultCode","profileReducer","action","newPost","filter","postId","Boolean","window","location","hostname","dialogs","messages","dialogsReducer","body","newMessageBody","friends","sidebarReducer","users","totalUsersCount","isFetching","followingInProgress","pagePortionSize","followActionCreator","unfollowActionCreator","setCurrentPageActionCreator","pageNumber","toggleFollowingProgressActionCreator","setIsFetchingActionCreator","usersReducer","user","followed","setUserDataActionCreator","payload","authoriseMeThunkCreator","authReducer","initialized","reducers","combineReducers","messagesPage","sidebar","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","Friend","friendName","Friends","friendsElements","onlineFriend","friend","nav","to","activeClassName","active","bg","NavBar","News","Settings","Music","DialogItem","path","dialog_item","MessageItem","message_item","maxLength100","ReduxAddMessageForm","Dialogs","dialogsElements","dialog","messageElements","dialogs_items","sendMessage","DialogsContainer","sendMessageActionCreator","Paginator","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","page","p","console","log","selectedPage","key","e","onPageChanged","Users","small","hacker","userIcon","disabled","followingProgress","some","unfollowUsers","getPageSize","getTotalUsersCount","getIsFetching","getFollowingInProgress","UsersAPIComponent","follow","unfollow","setCurrentPage","toggleProgress","items","totalCount","Header","header","loginBlock","HeaderContainer","ReduxLoginForm","Input","error","formSummaryError","length","stopSubmit","_error","loginThunkCreator","formData","App","lazy","initializeApp","Navbar","render","exact","UsersContainer","then","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","input","meta","hasError","touched","formControl","mapStateToPropsForRedirect","RedirectComponent","loader_2"],"mappings":"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","file":"static/js/main.5b47e944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__32pZf\"};","module.exports = __webpack_public_path__ + \"static/media/hacker.98ac1181.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loader_2.51f78f24.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Friends_bg__3Fqmr\",\"nav\":\"Friends_nav__2_44x\",\"item\":\"Friends_item__23b3A\",\"active\":\"Friends_active__1NgvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Zo-Q\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    //useState - возвращает массив в котором первый элемент это то с чем мы работаем, а второй функция позволяющая менять этот обьект\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = event => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <>{!editMode ?\r\n                <div>\r\n                    <span onClick={activateMode}>{props.status || \"Nostatus\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deActivateMode}/>\r\n                </div>\r\n            }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n        return <Loader/>\r\n    }\r\n    let contactsArray = [\r\n         props.profile.contacts.facebook,\r\n        props.profile.contacts.website,\r\n        props.profile.contacts.vk,\r\n        props.profile.contacts.twitter,\r\n        props.profile.contacts.instagram,\r\n        props.profile.contacts.youtube\r\n    ]\r\n\r\n   let contacts = contactsArray.map((item) => {\r\n       return(\r\n           <li>{item !== null ? item : null}</li>\r\n       )\r\n   })\r\n\r\n    return (\r\n    <div>\r\n        <div>\r\n            <img src={props.profile.photos.large}/>\r\n        </div>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        <div>\r\n            <div>About me: {props.profile.aboutMe}</div>\r\n        </div>\r\n        <div>\r\n            <div>Job description: {props.profile.lookingForAJobDescription}</div>\r\n        </div>\r\n        <div>\r\n            <ul>Contacts:\r\n                {contacts}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport anonymous from \"../../../../media/create_account_2_anonymous.png\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src={anonymous}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likeCounts}like's</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {requiredField, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../FormsControls/FormControls\";\r\n\r\nlet maxLength30 = maxLengthCreator(30);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea}\r\n                   name={\"newPostBody\"}\r\n                   validate={[requiredField, maxLength30]}\r\n                   placeholder={\"enter here your post message\"}/>\r\n            <button onClick={props.addPost}>Add Post</button>\r\n            <button>Remove</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxPostForm = reduxForm({\r\n    form: \"postForm\"\r\n})(PostForm)\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postElements = props.posts.map((post) =>\r\n        <Post message={post.message} likeCounts={post.likesCount}/>\r\n    )\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {postElements}\r\n            <ReduxPostForm onSubmit={addNewPost}/>\r\n            <div className={classes.posts}>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => dispatch(addPostActionCreator(newPostBody))\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    setUserProfileActionCreator,\r\n    setUsersProfileThunkCreator, updateStatusThunkCreator\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){\r\n            userId = this.props.authorisedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.setUsersProfileThunkCreator(userId);\r\n        this.props.getStatusThunkCreator(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatusThunkCreator}/>\r\n        )\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = WithAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{setUserProfileActionCreator, setUsersProfileThunkCreator,\r\n        getStatusThunkCreator,updateStatusThunkCreator}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect(mapStateToProps,{setUserProfileActionCreator, setUsersProfileThunkCreator })(WithUrlDataContainerComponent);","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c1a148a8-8982-4ec3-b707-9e291c9b5bbf\"\r\n    }\r\n});\r\n\r\n//GET,DELETE => Запросы без нагрузки(without payload), тоесть они не чего не передают на сервер (без body)\r\n//POST,PUT => Запросы с нагрузкой(with payload), передают на сервер какой-то body\r\n\r\nexport const usersAPI = {\r\n     getUsers(currentPage = 2,pageSize = 10){\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        )\r\n    },\r\n    followUsers(userId){\r\n        return (\r\n            instance.post(`follow/${userId}`,{}\r\n            )\r\n        )\r\n    },\r\n    UNfollowUsers(userId){\r\n        return (\r\n            instance.delete(`follow/${userId}`\r\n            )\r\n        )\r\n    },\r\n    authoriseMe(){\r\n         return(\r\n             instance.get(`auth/me`)\r\n         )\r\n    },\r\n    getProfile(userId){\r\n         return(\r\n             axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n         )\r\n    },\r\n    getStatus(userId){\r\n         return(\r\n             instance.get(`/profile/status/${userId}`)\r\n         )\r\n    },\r\n    updateStatus(status){\r\n         return(\r\n             instance.put(`profile/status/`, {status: status})\r\n         )\r\n    },\r\n    login(email,password,rememberMe = false){\r\n         return(\r\n             instance.post(`auth/login`, {email,password,rememberMe})\r\n         )\r\n    },\r\n    logout(){\r\n         return(\r\n             instance.delete(`auth/login`)\r\n         )\r\n    }\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__yDNOP\",\"item\":\"Navbar_item__345fk\",\"active\":\"Navbar_active__2ZYeY\"};","import {usersAPI} from \"../api/api\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nexport const SET_STATUS = \"SET_STATUS\";\r\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi,from Java man\", likesCount: 25},\r\n        {id: 1, message: \"Python the best_ ho-ho-ho\", likesCount: 55}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostBody,\r\n                likesCount: 100\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId )\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return{\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport let addPostActionCreator = (newPostBody) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody\r\n    }\r\n}\r\n\r\nexport let deletePostActionCreator = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\nexport let setUserProfileActionCreator = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile\r\n    }\r\n}\r\n\r\nexport let setStatusActionCreator = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status: status\r\n    }\r\n}\r\n\r\nexport let getStatusThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getStatus(userId)\r\n            dispatch(setStatusActionCreator(response.data))\r\n        }\r\n}\r\n\r\nexport let updateStatusThunkCreator = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0){\r\n                dispatch(setStatusActionCreator(status))\r\n            }\r\n        }\r\n}\r\n\r\nexport const setUsersProfileThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId)\r\n            dispatch(setUserProfileActionCreator(response.data));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Roman\"},\r\n        {id: 2, name: \"Daniel\"},\r\n        {id: 3, name: \"Max\"}],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"When will u connect Mongo Homie???)))\"},\r\n        {id: 3, message: \"AHAHAHAHhHH\"}],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState,action) => {\r\n\r\n\r\n\r\n    switch (action.type){\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: body}]\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport let sendMessageActionCreator = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Max\"},\r\n        {id: 2, name: \"Daniel\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOW_PROGRESS = \"TOGGLE_IS_FOLLOW_PROGRESS\"\r\n\r\nconst initialState = {\r\n    users: [\r\n    ],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    pagePortionSize: 10\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId){\r\n                        return {...user,followed:true}\r\n                    }\r\n                    return(\r\n                    user\r\n                    )\r\n                })\r\n\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId){\r\n                        return {...user,followed:false}\r\n                    }\r\n                    return(\r\n                        user\r\n                    )\r\n                })\r\n\r\n            }\r\n        case SET_USERS:\r\n            return{\r\n                ...state, users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return{\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return{\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return{\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOW_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followActionCreator = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const unfollowActionCreator = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const setUsersActionCreator = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\nexport const setCurrentPageActionCreator = (pageNumber) =>{\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: pageNumber\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCountActionCreator = (totalCount) => {\r\n    return {\r\n        type: SET_USERS_TOTAL_COUNT,\r\n        totalUsersCount: totalCount\r\n    }\r\n}\r\n\r\nexport const toggleFollowingProgressActionCreator = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOW_PROGRESS,\r\n        isFetching: isFetching,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const setIsFetchingActionCreator = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetchingActionCreator(true));\r\n        dispatch(setCurrentPageActionCreator(currentPage))\r\n        let response = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setIsFetchingActionCreator(false));\r\n            dispatch(setUsersActionCreator(response.data.items));\r\n            dispatch(setTotalUsersCountActionCreator(response.data.totalCount))\r\n    }\r\n}\r\n\r\nexport const followThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgressActionCreator(true, userId));\r\n        let response = await usersAPI.followUsers(userId)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followActionCreator(userId));\r\n            }\r\n            dispatch(toggleFollowingProgressActionCreator(false, userId));\r\n    }\r\n}\r\n\r\nexport const UNfollowThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgressActionCreator(true, userId));\r\n        let response = await usersAPI.UNfollowUsers(userId)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowActionCreator(userId));\r\n            }\r\n            dispatch(toggleFollowingProgressActionCreator(false, userId));\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import {usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserDataActionCreator = (userId, login, email, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {\r\n            userId, login, email, isAuth\r\n        }\r\n    }\r\n}\r\n\r\nexport const authoriseMeThunkCreator = () => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.authoriseMe()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setUserDataActionCreator(id, login, email, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authoriseMeThunkCreator())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutThunkCreator = () => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserDataActionCreator(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {authoriseMeThunkCreator} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_INITIALIZED:\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccessActionCreator = () => {\r\n    return{\r\n        type: SET_INITIALIZED\r\n    }\r\n}\r\n\r\nexport const initializeThunkCreator = () => {\r\n    return(dispatch) => {\r\n        let promise = dispatch(authoriseMeThunkCreator())\r\n        promise.then(() => {\r\n            dispatch(initializedSuccessActionCreator())\r\n        });\r\n    }\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer, //тоже самое что и profileReducer: profileReducer\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n//thunk нужен для ассинхронных запросов\r\n// pure function = data -> pure function -> return data\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport anonymous from \"../../../media/create_account_2_anonymous.png\";\r\nimport classes from \"./Friend.module.css\"\r\n\r\nconst Friend = (props) => {\r\n    return(\r\n    <div className={classes.item}>\r\n        <img src={anonymous}/>\r\n        <div>{props.friendName}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from \"react\";\r\nimport Friend from \"./Friend/Friend\";\r\nimport classes from \"./Friends.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Friends = (props) => {\r\n\r\n    let friendsElements = props.onlineFriend.map((friend) => {\r\n        return (\r\n            <Friend friendName={friend.name} id={friend.id}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/feed\" activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.bg}>\r\n                Friends online:\r\n                {friendsElements}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport Friends from \"../Friends/Friends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//NavLink - для динамической подгрузки контента без перезагрузки страниц\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        onlineFriend: state.sidebar.friends\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst NavBar = connect(mapStateToProps,mapDispatchToProps)(Friends);\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from \"../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n            <NavLink to={path} className={classes.dialog_item + ' ' + classes.active}>\r\n                {props.name}\r\n            </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"../Dialogs.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={classes.message_item}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {TextArea} from \"../FormsControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n//ИЗБЕГАЙ ДУБЛИРОВАНИЯ КОДА!!!\r\n//REFACTOR!!!\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map((dialog) =>\r\n        <DialogItem name={dialog.name} id={dialog.id}/>\r\n    );\r\n\r\n    let messageElements = state.messages.map((message) =>\r\n        <MessageItem message={message.message} id={message.id}/>\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if(!props.isAuth){\r\n        return <Redirect to={\"/login\"} />\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>\r\n                    {messageElements}\r\n                </div>\r\n                <hr/>\r\n                <ReduxAddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength100 = maxLengthCreator(100);\r\n\r\nconst addMessageForm = props => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} validate={[requiredField, maxLength100]} name=\"newMessageBody\" placeholder=\"enter new message\" />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddMessageForm = reduxForm({\r\n    form: \"addMessageForm\"\r\n})(addMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(Dialogs);","import React, {useState} from \"react\";\r\nimport classes from \"./Users.module.css\"\r\n\r\nlet Paginator = props => {\r\n\r\n\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/props.pagePortionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.pagePortionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.pagePortionSize;\r\n\r\n    let onPageChanged = (page) => {\r\n        props.onPageChanged(page)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.page}>\r\n            {portionNumber > 1 ?\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>prev</button> : null}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(page => {\r\n                    console.log(page)\r\n                    return <span\r\n                        className={page === props.currentPage ? classes.selectedPage: classes.page}\r\n                        key={page}\r\n                        onClick={(e) => {\r\n                            onPageChanged(page)\r\n                        }}>{page}</span>\r\n                })}\r\n            {portionCount > portionNumber ?\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1)}}>next</button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport hacker from \"../../media/hacker.jpg\"\r\nimport classes from \"./Users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n           <Paginator currentPage={props.currentPage} totalUsersCount={props.totalUsersCount}\r\n           pageSize={props.pageSize} onPageChanged={props.onPageChanged} pagePortionSize={props.pagePortionSize} />\r\n            {\r\n                props.users.map((user) => {\r\n                    return (\r\n                        <div key={user.id}>\r\n                            <span>\r\n                                <div>\r\n                                    <NavLink to={`/profile/${user.id}`}>\r\n                                        <img src={user.photos.small != null ? user.photos.small : hacker}\r\n                                             className={classes.userIcon}/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div>\r\n                                    {user.followed ?\r\n                                        <button disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n                                            props.unfollowUsers(user.id);\r\n                                            }}>UNFollow</button>\r\n                                        : <button disabled={props.followingProgress.some(id => id === user.id)  } onClick={() => {\r\n                                            props.followUsers(user.id);\r\n                                        }}>Follow</button>}\r\n\r\n                                </div>\r\n                            </span>\r\n                            <span>\r\n                                <span>\r\n                                    <div>{user.name}</div>\r\n                                    <div>{user.status}</div>\r\n                                </span>\r\n                                <span>\r\n                                    <div>{'user.location.city'}</div>\r\n                                    <div>{'user.location.country'}</div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followActionCreator, followThunkCreator, getUsersThunkCreator,\r\n    setCurrentPageActionCreator, toggleFollowingProgressActionCreator,\r\n    unfollowActionCreator, UNfollowThunkCreator\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber,this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Loader/> : null}\r\n                <Users currentPage={this.props.currentPage}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       setCurrentPage={this.props.setCurrentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       followingProgress={this.props.followingProgress}\r\n                       followUsers={this.props.followUsers}\r\n                       unfollowUsers={this.props.unfollowUsers}\r\n                       pagePortionSize={this.props.pagePortionSize}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingInProgress(state),\r\n        pagePortionSize: state.usersPage.pagePortionSize\r\n    }\r\n}\r\n\r\n// const UsersContainer = connect(mapStateToProps,\r\n//     {follow: followActionCreator,\r\n//     unfollow: unfollowActionCreator,\r\n//     setCurrentPage: setCurrentPageActionCreator,\r\n//     toggleProgress: toggleFollowingProgressActionCreator,\r\n//         getUsers: getUsersThunkCreator,\r\n//     followUsers: followThunkCreator,\r\n//     unfollowUsers: UNfollowThunkCreator})(UsersAPIComponent);\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {follow: followActionCreator,\r\n        unfollow: unfollowActionCreator,\r\n        setCurrentPage: setCurrentPageActionCreator,\r\n        toggleProgress: toggleFollowingProgressActionCreator,\r\n        getUsers: getUsersThunkCreator,\r\n        followUsers: followThunkCreator,\r\n        unfollowUsers: UNfollowThunkCreator}),\r\n    WithAuthRedirect)(UsersAPIComponent);\r\n\r\n","import React from \"react\";\r\nimport anonymous from \"../../media/create_account_2_anonymous.png\";\r\nimport classes from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n\r\n    <header className={classes.header}>\r\n        <img src={anonymous}/>\r\n\r\n        <div className={classes.loginBlock}>\r\n\r\n            {props.isAuth ?<div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={\"/login\"}>\r\n                    LOGIN\r\n                </NavLink>}\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;"," import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunkCreator} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    render() {\r\n\r\n        return(\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => dispatch(logoutThunkCreator())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {Input} from \"../FormsControls/FormControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../FormsControls/formsControls.module.css\"\r\n\r\nconst Login = (props) => {\r\n    return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field placeholder=\"Login\"\r\n                           name={\"login\"}\r\n                           component={Input}\r\n                           validate={[requiredField]}/>\r\n                </div>\r\n                <div>\r\n                    <Field placeholder=\"password\"\r\n                           name={\"password\"}\r\n                           type={\"password\"}\r\n                           component={Input}\r\n                           validate={[requiredField]}/>\r\n                </div>\r\n                <div>\r\n                    <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/>remember me\r\n                </div>\r\n                {props.error && <div className={classes.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: \"login\"\r\n})(Login)\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const onSubmit = formData => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth){\r\n        debugger;\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (email, password, rememberMe) => {\r\n            dispatch(loginThunkCreator(email, password, rememberMe))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginForm);","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {withRouter, Route, Switch} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport Music from \"./components/Music/Music\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeThunkCreator} from \"./redux/appReducer\";\nimport Loader from \"./components/Loader/Loader\";\n\n\nconst Profile = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Loader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                    <Route exact path=\"/feed\" component={News}/>\n                    <Route exact path=\"/settings\" component={Settings}/>\n                    <Route exact path=\"/music\" component={Music}/>\n                    <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initializeApp: () => dispatch(initializeThunkCreator())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(App);\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux_store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1hmOL\",\"dialogs_items\":\"Dialogs_dialogs_items__36GQu\",\"dialog_item\":\"Dialogs_dialog_item__2Tx3S\",\"active\":\"Dialogs_active__19L2N\",\"messages\":\"Dialogs_messages__1oCa_\",\"message_item\":\"Dialogs_message_item__3m7nJ\"};","export const requiredField = (value) => {\r\n    if(value) {\r\n        return undefined;\r\n    }\r\n\r\n    return \"field is required\";\r\n}\r\n\r\nexport const maxLength30 = value => {\r\n    if(value && value.length > 30){\r\n        return \"Max length is 30\"\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength){\r\n        return `Max length is ${maxLength}`\r\n    }\r\n    return undefined\r\n}","import React from \"react\";\r\nimport classes from \"./formsControls.module.css\";\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <textarea {...input} {...props}/>\r\n            { hasError ? <span>{meta.error}</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <input {...input} {...props}/>\r\n            { hasError ? <span>{meta.error}</span> : null}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__113P_\",\"error\":\"formsControls_error__2NxD8\",\"formSummaryError\":\"formsControls_formSummaryError__LvBVr\"};","module.exports = __webpack_public_path__ + \"static/media/create_account_2_anonymous.dc9fc146.png\";","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) =>  ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth){\r\n                return  <Redirect to={\"/login\"}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport loader_2 from \"../../media/loader_2.svg\";\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={loader_2}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userIcon\":\"Users_userIcon__3Evp4\",\"selectedPage\":\"Users_selectedPage__2D3u-\",\"page\":\"Users_page__3mAdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1dMMO\",\"loginBlock\":\"Header_loginBlock__qoTr_\"};"],"sourceRoot":""}